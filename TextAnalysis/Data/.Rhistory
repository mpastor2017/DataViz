library(data.table)
library(caret)
glass = fread("glass.csv")
glass = glass[,-1]
glass$type = ifelse(glass$type == "WinF" | glass$type == "WinNF", "Window","Other")
scaled_glass = data.table(apply(glass[,1:9],2,scale))
scaled_glass = cbind(scaled_glass,glass$type)
setnames(scaled_glass, c("RI","Na","Mg","Al","Si","K","Ca","Ba","Fe","type"))
scaled_glass$type = as.factor(scaled_glass$type)
scaled_glass <- scaled_glass[sample(1:nrow(scaled_glass)), ]
gam.cv.glass <- train(type ~ .,
data = scaled_glass,
method = 'gam',
trControl = trainControl(method = 'CV', number = 10),
family = 'binomial')
gam.cv.glass
knnTune.glass = train(type ~ ., data = scaled_glass,
method = "knn",
tuneGrid = data.frame(.k = 1:20),
trControl = trainControl(method = "cv"))
knnTune.glass
my.grid <- expand.grid(.decay = c(0.5, 0.1, 0.3,1), .size = c(5, 10, 15, 20, 35))
glass.nnfit <- train(type ~ .,
data = scaled_glass,
trControl = trainControl(method = "cv"),
method = "nnet",
maxit = 1000,
tuneGrid = my.grid,
trace = F,
linout = F)
glass.nnfit
knnTune.glass
gam.cv.glass
glass.nnfit
gbm.grid = expand.grid(n.trees = c(5000,10000),interaction.depth = c(3,5), shrinkage = c(0.1,0.01),n.minobsinnode = c(5,10))
heart = rbind(heart,list(1,59,0,10,0,3,0,4,300))
heart = fread("heart.csv")
heart = heart[, V1 := NULL]
heart$cost = log10(heart$cost)
heart = rbind(heart,list(1,59,0,10,0,3,0,4,300))
gbm.heart = gbm(cost ~., data = heart[-789,], var.monotone = rep(0,8),
distribution = "gaussian", n.trees = 5000,
shrinkage = 0.1, interaction.depth = 3,
bag.fraction =  0.5, train.fraction = 1,
n.minobsinnode = 10, cv.folds = 10, keep.data = TRUE,
verbose = FALSE)
library(gbm)
gbm.heart = gbm(cost ~., data = heart[-789,], var.monotone = rep(0,8),
distribution = "gaussian", n.trees = 5000,
shrinkage = 0.1, interaction.depth = 3,
bag.fraction =  0.5, train.fraction = 1,
n.minobsinnode = 10, cv.folds = 10, keep.data = TRUE,
verbose = FALSE)
best.iter = gbm.perf(gbm.heart, method = "cv")
sqrt(gbm.heart$cv.error[best.iter])
1 - gbm.heart$cv.error[best.iter]/ var(heart[-789,]$cost)
sqrt(gbm.heart$cv.error[best.iter])
1 - gbm.heart$cv.error[best.iter]/ var(heart[-789,]$cost)
gbm.heart
best.iter <- gbm.perf(gbm.heart$finalModel)
summary(gbm.heart, n.trees = best.iter)
par(mfrow = c(2,4))
for (i in c(1,2,3,4,5,6,7,8)) {plot(gbm.heart, i.var = i,n.trees = best.iter)}
plot(gbm.heart, i.var = c(8,1), n.trees = best.iter)
summary(gbm.heart, n.trees = best.iter)
loess.cv
loess.cv <- train(cost ~ intvn + comorb + dur + ervis,
data = scaled_heart[-789,],
method = 'gamLoess',
trControl = trainControl(method = 'cv', number = 10),
tuneGrid = expand.grid(span = seq(0.2, 1, 0.1), degree = c(0, 1)))
scaled_heart = data.table(apply(heart[,2:9],2,scale))
scaled_heart = cbind(heart$cost,scaled_heart)
setnames(scaled_heart, c("cost","age","gend","intvn","drugs","ervis","comp","comorb","dur"))
loess.cv <- train(cost ~ intvn + comorb + dur + ervis,
data = scaled_heart[-789,],
method = 'gamLoess',
trControl = trainControl(method = 'cv', number = 10),
tuneGrid = expand.grid(span = seq(0.2, 1, 0.1), degree = c(0, 1)))
loess.cv
head(scaled_heart)
for (lambda in seq(.1,1,.1)) {out<-loess(cost~ intvn + comorb + dur + ervis,scaled_heart[-789,],degree=1, span=lambda); SSE<-sum((scaled_heart[-789,1]-out$fitted)^2); Cp <- (SSE+2*out$trace.hat*sig_hat^2)/nrow(CPUS1); print(c(lambda,Cp))}
for (lambda in seq(.1,1,.1)) {out<-loess(perf~.,CPUS1[,c(1:4,7)],degree=1, span=lambda); print(c(lambda,out$s))}
for (lambda in seq(.1,1,.1)) {out<-loess(cost~intvn + comorb + dur + ervis, data,degree=1, span=lambda); print(c(lambda,out$s))}
for (lambda in seq(.1,1,.1)) {out<-loess(cost~intvn + comorb + dur + ervis, data = scaled_heart[-789,],degree=1, span=lambda); print(c(lambda,out$s))}
loess.cv
for (lambda in seq(.1,1,.1)) {out<-loess(cost~intvn + comorb + dur + ervis, data = scaled_heart[-789,],degree=1, span=lambda); print(c(lambda,out$s))}
loess.cv
10^(predict(loess.cv$finalModel,scaled_heart[789,]))
rForest1 <- randomForest(cost~., data=heart[-789,], mtry=3, ntree = 500, nodesize = 3, importance = TRUE)
library(randomForest)
rForest1 <- randomForest(cost~., data=heart[-789,], mtry=3, ntree = 500, nodesize = 3, importance = TRUE)
rForest1
PPRTune = train(cost ~ .,
data = scaled_heart[-789,],
method = "ppr",
tuneGrid = data.frame(.nterms = 1:20),
trControl = trainControl(method = "cv"))
PPRTune
10^(predict(PPRTune$finalModel,scaled_heart[789,][,-1]))
warnings()
rm(list=ls(
))
library(data.table)
library(caret)
library(caret)
library(gbm)
library(randomForest)
orig_heart = fread("heart.csv")
heart = fread("heart.csv")
heart = heart[, V1 := NULL]
heart$cost = log10(heart$cost)
glass = fread("glass.csv")
glass = glass[,-1]
set.seed(1234)
scaled_heart = data.table(apply(heart[,2:9],2,scale))
scaled_heart = cbind(heart$cost,scaled_heart)
setnames(scaled_heart, c("cost","age","gend","intvn","drugs","ervis","comp","comorb","dur"))
knnTune = train(cost ~ ., data = scaled_heart,
method = "knn",
tuneGrid = data.frame(.k = 1:20),
trControl = trainControl(method = "LOOCV"))
scaled_heart = rbind(scaled_heart,list(1,(59-58.72)/6.754118,-0.543761832303295,(10-4.707)/5.594661,(0-0.4467)/1.063882,(3-3.425)/2.637474,(0-0.05711)/0.248068,(4-3.767)/5.95099,(300-164.03)/120.9159))
set.seed(1234)
GAMTune = train(cost ~ .,
data = scaled_heart[-789,],
method = "gam",
trControl = trainControl(method = "cv"))
loess.cv <- train(cost ~ intvn + comorb + dur + ervis,
data = scaled_heart[-789,],
method = 'gamLoess',
trControl = trainControl(method = 'cv', number = 10),
tuneGrid = expand.grid(span = seq(0.2, 1, 0.1), degree = c(0, 1)))
PPRTune = train(cost ~ .,
data = scaled_heart[-789,],
method = "ppr",
tuneGrid = data.frame(.nterms = 1:20),
trControl = trainControl(method = "cv"))
glass$type = ifelse(glass$type == "WinF" | glass$type == "WinNF", "Window","Other")
scaled_glass = data.table(apply(glass[,1:9],2,scale))
scaled_glass = cbind(scaled_glass,glass$type)
setnames(scaled_glass, c("RI","Na","Mg","Al","Si","K","Ca","Ba","Fe","type"))
scaled_glass$type = as.factor(scaled_glass$type)
scaled_glass <- scaled_glass[sample(1:nrow(scaled_glass)), ]
knnTune.glass = train(type ~ ., data = scaled_glass,
method = "knn",
tuneGrid = data.frame(.k = 1:20),
trControl = trainControl(method = "cv"))
gam.cv.glass <- train(type ~ .,
data = scaled_glass,
method = 'gam',
trControl = trainControl(method = 'CV', number = 10),
family = 'binomial')
heart = fread("heart.csv")
library(knitr)
library(data.table)
library(caret)
library(caret)
library(gbm)
library(randomForest)
heart = fread("heart.csv")
heart = heart[, V1 := NULL]
heart$cost = log10(heart$cost)
scaled_heart = data.table(apply(heart[,2:9],2,scale))
scaled_heart = cbind(heart$cost,scaled_heart)
setnames(scaled_heart, c("cost","age","gend","intvn","drugs","ervis","comp","comorb","dur"))
scaled_heart = rbind(scaled_heart,list(1,(59-58.72)/6.754118,-0.543761832303295,(10-4.707)/5.594661,(0-0.4467)/1.063882,(3-3.425)/2.637474,(0-0.05711)/0.248068,(4-3.767)/5.95099,(300-164.03)/120.9159))
GAMTune = train(cost ~ .,
data = scaled_heart[-789,],
method = "gam",
trControl = trainControl(method = "cv"))
10^(predict(GAMTune,scaled_heart[789,]))
GamResult = 10^(predict(GAMTune,scaled_heart[789,]))
load("C:/Users/marip/Desktop/Pred 2/HW3/.RData")
save.image("C:/Users/marip/Desktop/Pred 2/HW3/HW3.RData")
10^(predict(loess.cv$finalModel,scaled_heart[789,]))
loess.cv
10^(predict(loess.cv$finalModel,scaled_heart[789,]))
unlink('C:/Users/marip/Desktop/Pred 2/HW3/HW3_cache', recursive = TRUE)
heart
fit = lm(cost ~., data = heart)
fit$coefficients
fit$coefficients[1]
for(i in fit$coefficients){}
print(i)
for(i in fit$coefficients){
print(i)
}
unlist(fit$coefficients)
as.vector(fit$coefficients)
rm(list = ls())
rm(list = ls())
setwd("C:/Users/marip/Desktop/DataViz/DataViz/TextAnalysis/TextFiles")
setwd("C:/Users/marip/Desktop")
load("C:/Users/marip/Desktop/Mobile Gaming/Regression/regression_trained_model.RData")
regression.rf$finalModel$importance
order(egression.rf$finalModel$importance)
order(regression.rf$finalModel$importance)
regression.rd$finalModel$importance[order(regression.rf$finalModel$importance),]
regression.rf$finalModel$importance[order(regression.rf$finalModel$importance),]
regression.rf$finalModel$importance[order(-regression.rf$finalModel$importance),]
varImp(regression.rf$finalModel)
??varImp
VarImp(regression.rf$finalModel)
regression.rf$finalModel.varImp
regression.rf
varImp(regression.rf)
library(caret)
varImp(regression.rf)
varImp(regression.rf)
varImp(regression.rf)
regression.xgb
summary(regression$tot_spent)
table(regression$tot_spent > 500)
table(regression$tot_spent > 100)
table(regression$tot_spent > 2)
hist(regression$tot_spent)
setwd("C:/Users/marip/Desktop/mobile/Model_Features/Regression")
regression = fread("purchase_regression.csv")
library(data.table)
regression = fread("purchase_regression.csv")
regression$MARKETING = as.factor(regression$MARKETING)
regression = subset(regression, regression$tot_spent > 0)
regression$tot_spent = scale(regression$tot_spent)
regression = fread("purchase_regression.csv")
regression$MARKETING = as.factor(regression$MARKETING)
regression = subset(regression, regression$tot_spent > 0)
regression_log = log(regression$tot_spent)
hist(regression_log)
regression$tot_spent = log(regression$tot_spent)
cntrl <- trainControl(method = "cv", number = 100)
base.grid <- expand.grid(.eta = c(0.1, 0.3, 0.5), .max_depth = c(3,6),
.subsample = c(0.5, 1), .nrounds = 500,
.gamma = 0, .colsample_bytree = 0.5,
.min_child_weight = 1)
regression.xgb = train(tot_spent ~ .,
data = regression[,-c(1,2,3)],
method = "xgbTree",
trControl = cntrl,
tuneGrid = base.grid)
regression = fread("purchase_regression.csv")
summary(regression$tot_spent)
sd(regression$tot_spent)
sd(regression$tot_spent) * 0.67
regression.rf
rm(list=ls())
setwd("C:/Users/marip/Desktop/mobile/AggregatedPurchase")
library(data.table)
purchases = fread("purchases.csv")
installs = fread("installs.csv")
target_players = subset(installs, installs$DAY_ < 8)
purchases = subset(purchases, purchases$DEVICE_ID %in% target_players$DEVICE_ID)
premium0_7 = subset(purchases, purchases$DAY_ < 8)
length(unique(target_players$DEVICE_ID))
head(premium0_7)
premium0_7 = premium0_7[,.(tot_spent = sum(NET_REVENUE_USD),numb_purchase = .N), by = DEVICE_ID_]
premium0_7 = premium0_7[,.(tot_spent = sum(NET_REVENUE_USD),numb_purchase = .N), by = DEVICE_ID]
head(premium0_7)
purchases = subset(purchases, purchases$DEVICE_ID !%in% premium0_7$DEVICE_ID)
purchases = subset(purchases, !(purchases$DEVICE_ID %in% premium0_7$DEVICE_ID))
non_premium0_7 = purchases[,.(tot_spent = sum(NET_REVENUE_USD),numb_purchase = .N), by = DEVICE_ID]
head(non_premium0_7)
summary(non_premium0_7)
summary(premium0_7)
purchases = fread("purchases.csv")
installs = fread("installs.csv")
target_players = subset(installs, installs$DAY_ < 8)
purchases = subset(purchases, purchases$DEVICE_ID %in% target_players$DEVICE_ID)
premium0_7_ids = subset(purchases, purchases$DAY_ < 8)
premium0_7 = subset(purchases, purchases$DEVICE_ID %in% premium0_7_ids$DEVICE_ID)
premium0_7 = premium0_7[,.(tot_spent = sum(NET_REVENUE_USD),numb_purchase = .N), by = DEVICE_ID]
summary(premium0_7)
non_premium_ids = subset(purchases, !(purchases$DEVICE_ID %in% premium0_7_ids$DEVICE_ID))
non_premium0_7 = purchases[,.(tot_spent = sum(NET_REVENUE_USD),numb_purchase = .N), by = DEVICE_ID]
non_premium0_7 = subset(purchases, purchases$DEVICE_ID %in% non_premium_ids)
non_premium0_7 = purchases[,.(tot_spent = sum(NET_REVENUE_USD),numb_purchase = .N), by = DEVICE_ID]
purchases = fread("purchases.csv")
installs = fread("installs.csv")
target_players = subset(installs, installs$DAY_ < 8)
purchases = subset(purchases, purchases$DEVICE_ID %in% target_players$DEVICE_ID)
premium0_7_ids = subset(purchases, purchases$DAY_ < 8)
premium0_7 = subset(purchases, purchases$DEVICE_ID %in% premium0_7_ids$DEVICE_ID)
premium0_7 = premium0_7[,.(tot_spent = sum(NET_REVENUE_USD),numb_purchase = .N), by = DEVICE_ID]
non_premium_ids = subset(purchases, !(purchases$DEVICE_ID %in% premium0_7_ids$DEVICE_ID))
non_premium0_7 = subset(purchases, purchases$DEVICE_ID %in% non_premium_ids)
non_premium0_7 = purchases[,.(tot_spent = sum(NET_REVENUE_USD),numb_purchase = .N), by = DEVICE_ID]
table(non_premium0_7$DEVICE_ID %in% premium0_7$DEVICE_ID)
purchases = fread("purchases.csv")
installs = fread("installs.csv")
target_players = subset(installs, installs$DAY_ < 8)
purchases = subset(purchases, purchases$DEVICE_ID %in% target_players$DEVICE_ID)
premium0_7_ids = subset(purchases, purchases$DAY_ < 8)
premium0_7 = subset(purchases, purchases$DEVICE_ID %in% premium0_7_ids$DEVICE_ID)
premium0_7 = premium0_7[,.(tot_spent = sum(NET_REVENUE_USD),numb_purchase = .N), by = DEVICE_ID]
non_premium_ids = subset(purchases, !(purchases$DEVICE_ID %in% premium0_7_ids$DEVICE_ID))
non_premium0_7 = subset(purchases, purchases$DEVICE_ID %in% non_premium_ids)
non_premium0_7 = non_premium0_7[,.(tot_spent = sum(NET_REVENUE_USD),numb_purchase = .N), by = DEVICE_ID]
purchases = fread("purchases.csv")
installs = fread("installs.csv")
target_players = subset(installs, installs$DAY_ < 8)
rm(list=ls())
purchases = fread("purchases.csv")
installs = fread("installs.csv")
target_players = subset(installs, installs$DAY_ < 8)
purchases = subset(purchases, purchases$DEVICE_ID %in% target_players$DEVICE_ID)
premium0_7_ids = subset(purchases, purchases$DAY_ < 8)
premium0_7 = subset(purchases, purchases$DEVICE_ID %in% premium0_7_ids$DEVICE_ID)
premium0_7 = premium0_7[,.(tot_spent = sum(NET_REVENUE_USD),numb_purchase = .N), by = DEVICE_ID]
non_premium_ids = subset(purchases, !(purchases$DEVICE_ID %in% premium0_7_ids$DEVICE_ID))
non_premium0_7 = subset(purchases, purchases$DEVICE_ID %in% non_premium_ids)
non_premium0_7 = non_premium0_7[,.(tot_spent = sum(NET_REVENUE_USD),numb_purchase = .N), by = DEVICE_ID]
rm(list=ls())
purchases = fread("purchases.csv")
installs = fread("installs.csv")
target_players = subset(installs, installs$DAY_ < 8)
purchases = subset(purchases, purchases$DEVICE_ID %in% target_players$DEVICE_ID)
premium0_7_ids = subset(purchases, purchases$DAY_ < 8)
premium0_7 = subset(purchases, purchases$DEVICE_ID %in% premium0_7_ids$DEVICE_ID)
premium0_7 = premium0_7[,.(tot_spent = sum(NET_REVENUE_USD),numb_purchase = .N), by = DEVICE_ID]
non_premium_ids = subset(purchases, !(purchases$DEVICE_ID %in% premium0_7_ids$DEVICE_ID))
non_premium0_7 = subset(purchases, purchases$DEVICE_ID %in% non_premium_ids)
purchases = fread("purchases.csv")
installs = fread("installs.csv")
target_players = subset(installs, installs$DAY_ < 8)
purchases = subset(purchases, purchases$DEVICE_ID %in% target_players$DEVICE_ID)
premium0_7_ids = subset(purchases, purchases$DAY_ < 8)
premium0_7 = subset(purchases, purchases$DEVICE_ID %in% premium0_7_ids$DEVICE_ID)
premium0_7 = premium0_7[,.(tot_spent = sum(NET_REVENUE_USD),numb_purchase = .N), by = DEVICE_ID]
non_premium_ids = subset(purchases, !(purchases$DEVICE_ID %in% premium0_7_ids$DEVICE_ID))
non_premium0_7 = subset(purchases, purchases$DEVICE_ID %in% non_premium_ids$DEVICE_ID)
non_premium0_7 = non_premium0_7[,.(tot_spent = sum(NET_REVENUE_USD),numb_purchase = .N), by = DEVICE_ID]
premium0_7features = premium0_7ids[,.(tot_spent = sum(NET_REVENUE_USD),numb_purchase = .N), by = DEVICE_ID]
premium0_7features = premium0_7_ids[,.(tot_spent = sum(NET_REVENUE_USD),numb_purchase = .N), by = DEVICE_ID]
premium0_7features = premium0_7_ids[,.(tot_spent0_7 = sum(NET_REVENUE_USD),numb_purchase = .N), by = DEVICE_ID]
premium0_7[, numb_purchase := NULL]
premium0_7 = cbind(premium0_7, premium0_7features$tot_spent0_7, premium0_7features$numb_purchase)
head(premium0_7)
setnames(premium0_7, c("DEVICE_ID","tot_spent","tot_spent0_7","numb_purchase"))
summary(premium0_7)
premium0_7$tot_spent = premium0_7$tot_spent - premium0_7$tot_spent0_7
summary(premium0_7)
non_premium0_7[, numb_purchase := NULL]
summary(non_premium0_7)
table(purchases$NET_REVENUE_USD < 0)
library(data.table)
rm(list=ls())
purchases = fread("purchases.csv")
installs = fread("installs.csv")
target_players = subset(installs, installs$DAY_ < 8)
purchases = subset(purchases, purchases$DEVICE_ID %in% target_players$DEVICE_ID)
premium0_7_ids = subset(purchases, purchases$DAY_ < 8)
premium0_7 = subset(purchases, purchases$DEVICE_ID %in% premium0_7_ids$DEVICE_ID)
table(premium0_7$NET_REVENUE_USD < 0)
premium0_7 = premium0_7[,.(tot_spent = sum(NET_REVENUE_USD),numb_purchase = .N), by = DEVICE_ID]
summary(premium0_7$tot_spent)
table(premium0_7$tot_spent == 0)
premium0_7features = premium0_7_ids[,.(tot_spent0_7 = sum(NET_REVENUE_USD),numb_purchase = .N), by = DEVICE_ID]
premium0_7[, numb_purchase := NULL]
premium0_7 = cbind(premium0_7, premium0_7features$tot_spent0_7, premium0_7features$numb_purchase)
setnames(premium0_7, c("DEVICE_ID","tot_spent","tot_spent0_7","numb_purchase"))
premium0_7$tot_spent = premium0_7$tot_spent - premium0_7$tot_spent0_7
summary(premium0_7)
table(premium0_7$tot_spent < 0)
purchases = fread("purchases.csv")
installs = fread("installs.csv")
target_players = subset(installs, installs$DAY_ < 8)
purchases = subset(purchases, purchases$DEVICE_ID %in% target_players$DEVICE_ID)
premium0_7_ids = subset(purchases, purchases$DAY_ < 8)
premium0_7 = subset(purchases, purchases$DEVICE_ID %in% premium0_7_ids$DEVICE_ID)
premium0_7 = premium0_7[,.(tot_spent = sum(NET_REVENUE_USD),numb_purchase = .N), by = DEVICE_ID]
premium0_7features = premium0_7_ids[,.(tot_spent0_7 = sum(NET_REVENUE_USD),numb_purchase = .N), by = DEVICE_ID]
premium0_7[, numb_purchase := NULL]
premium0_7 = merge(premium0_7, premium0_7features)
head(premium0_7)
premium0_7$tot_spent = premium0_7$tot_spent - premium0_7$tot_spent0_7
table(premium0_7$tot_spent < 0)
summary(premium0_7)
non_premium_ids = subset(purchases, !(purchases$DEVICE_ID %in% premium0_7_ids$DEVICE_ID))
non_premium0_7 = subset(purchases, purchases$DEVICE_ID %in% non_premium_ids$DEVICE_ID)
non_premium0_7 = non_premium0_7[,.(tot_spent = sum(NET_REVENUE_USD),numb_purchase = .N), by = DEVICE_ID]
non_premium0_7[, numb_purchase := NULL]
summary(non_premium0_7)
non_premium_ids = subset(purchases, !(purchases$DEVICE_ID %in% premium0_7_ids$DEVICE_ID))
non_premium0_7 = subset(purchases, purchases$DEVICE_ID %in% non_premium_ids$DEVICE_ID)
summary(non_premium0_7$NET_REVENUE_USD)
non_premium0_7 = non_premium0_7[,.(tot_spent = sum(NET_REVENUE_USD),numb_purchase = .N), by = DEVICE_ID]
non_premium0_7[, numb_purchase := NULL]
non_premium0_7 = non_premium0_7[complete.cases(non_premium0_7),]
setwd("C:/Users/marip/Desktop/mobile/Model_Features/FinalRegression")
setwd("C:/Users/marip/Desktop/mobile/Model_Features/DATAnew")
player_features = fread("player_features_days0to7.csv")
social_metrics = fread("social_metrics_days0to7.csv")
head(player_features)
premium0_7regression = merge(premium0_7,player_features)
premium0_7regression = merge(premium0_7regression, social_metrics)
head(premium0_7regression)
summary(premium0_7regression)
premium0_7regression[, COUNTRY := NULL]
premium0_7regression[, DEVICE := NULL]
nonpremium0_7regression = merge(non_premium0_7,player_features)
nonpremium0_7regression = merge(nonpremium0_7regression, social_metrics)
nonpremium0_7regression[, DEVICE := NULL]
nonpremium0_7regression[, COUNTRY := NULL]
head(nonpremium0_7regression)
setwd("C:/Users/marip/Desktop/mobile/Model_Features/FinalRegression")
frwite(premium0_7regression,"premium_regression.csv")
frwite(premium0_7regression,"premium_regression.csv")
fwrite(premium0_7regression,"premium_regression.csv")
fwrite(nonpremium0_7regression,"nonnpremium_regression.csv")
rm(list=ls())
library(data.table)
metrics = fread("metrics_final.csv")
setwd("C:/Users/marip/Desktop/DataViz/DataViz/TextAnalysis/Data")
metrics = fread("metrics_final.csv")
View(metrics)
summary(metrics$`name polarity`)
summary(metrics$name_polarity)
summary(metrics$nb_words_summary)
metrics[,`name polarity` := NULL]
fwrite(metrics, "metrics_final.csv")
