setwd("C:/Users/marip/Desktop/mobile/Model_Features/FinalRegression")
library(data.table)
library(caret)
heuristic = fread("premium_regression.csv")
combined8.14 = fread("combined_prediction_heuristic8.14.csv")
combined8 = fread("combined_prediction_heuristic8.csv")
summary(heuristic)
heuristic = heuristic[, eigenCentrality := NULL]
heuristic = heuristic[, closeness := NULL]
summary(combined8.14)
summar(combined8)
summary(combined8)
combined8 = combined8[, eigenCentrality := NULL]
combined8.14 = combined8.14[, eigenCentrality := NULL]
combined8 = combined8[, closeness := NULL]
combined8.14 = combined8.14[, closeness :=  NULL]
base.grid <- expand.grid(.eta = c(0.1, 0.5), .max_depth = c(3,6),
.subsample = c(0.5, 1), .nrounds = 500,
.gamma = 0, .colsample_bytree = 0.5,
.min_child_weight = 1)
heuristic$tot_spent = log(heuristic$tot_spent)
combined8$tot_spent = log(combined8$tot_spent)
combined8.14$tot_spent = log(combined8.14$tot_spent)
base.grid <- expand.grid(.eta = c(0.1, 0.5), .max_depth = c(3,6),
.subsample = c(0.5, 1), .nrounds = 500,
.gamma = 0, .colsample_bytree = 0.5,
.min_child_weight = 1)
cntrl <- trainControl(method = "cv", number = 10)
base.grid <- expand.grid(.eta = c(0.1, 0.5), .max_depth = c(3,6),
.subsample = c(0.5, 1), .nrounds = 500,
.gamma = 0, .colsample_bytree = 0.5,
.min_child_weight = 1)
heuristic.regression.xgb = train(tot_spent ~ .,
data = heuristic[,-1],
method = "xgbTree",
trControl = cntrl,
tuneGrid = base.grid)
base.grid <- expand.grid(.eta = c(0.1, 0.5), .max_depth = c(3,6),
.subsample = c(0.5, 1), .nrounds = 500,
.gamma = 0, .colsample_bytree = 0.5,
.min_child_weight = 1)
summary(heuristic)
head(heuristc[,-1])
head(heuristic[,-1])
library(data.table)
library(caret)
heuristic = fread("premium_regression.csv")
combined8.14 = fread("combined_prediction_heuristic8.14.csv")
combined8 = fread("combined_prediction_heuristic8.csv")
heuristic = heuristic[, eigenCentrality := NULL]
heuristic = heuristic[, closeness := NULL]
combined8 = combined8[, eigenCentrality := NULL]
combined8.14 = combined8.14[, eigenCentrality := NULL]
combined8 = combined8[, closeness := NULL]
combined8.14 = combined8.14[, closeness :=  NULL]
heuristic$tot_spent = log(heuristic$tot_spent +1)
combined8$tot_spent = log(combined8$tot_spent +1)
combined8.14$tot_spent = log(combined8.14$tot_spent+1)
head(heuristic[,-1])
cntrl <- trainControl(method = "cv", number = 10)
base.grid <- expand.grid(.eta = c(0.1, 0.5), .max_depth = c(3,6),
.subsample = c(0.5, 1), .nrounds = 500,
.gamma = 0, .colsample_bytree = 0.5,
.min_child_weight = 1)
heuristic.regression.xgb = train(tot_spent ~ .,
data = heuristic[,-1],
method = "xgbTree",
trControl = cntrl,
tuneGrid = base.grid)
comb.regression.xgb8 = train(tot_spent ~ .,
data = combined8[,-1],
method = "xgbTree",
trControl = cntrl,
tuneGrid = base.grid)
comb.regression.xgb8.14 = train(tot_spent ~ .,
data = combined8.14[,-1],
method = "xgbTree",
trControl = cntrl,
tuneGrid = base.grid)
heuristic.regression.xgb
base.grid <- expand.grid(.mtry=3:8)
heuristic.regression.rf = train(tot_spent ~ .,
data = heuristic[,-c(1)],
method = "rf",
trControl = cntrl,
tuneGrid = base.grid)
comb.regression.rf.8 = train(tot_spent ~ .,
data = combined8[,-c(1)],
method = "rf",
trControl = cntrl,
tuneGrid = base.grid)
comb.regression.rf.8
comb.regression.rf.8.14 = train(tot_spent ~ .,
data = combined8.14[,-c(1)],
method = "rf",
trControl = cntrl,
tuneGrid = base.grid)
heuristic.regression.xgb
heuristic.regression.rf
heuristic.regression.xgb
comb.regression.rf.8
comb.regression.xgb8
setwd("C:/Users/marip/Desktop/mobile/Model_Features/FinalRegression")
rm(list=ls())
setwd("C:/Users/marip/Desktop/DataViz/DataViz/TextAnalysis/Data")
text = fread("cleaned_text.csv")
head(text)
View(text)
metrics = fread("metrics_final.csv")
View(metrics)
setwd("C:/Users/marip/Desktop/DataViz/DataViz/Data")
listings = freadd("listings.csv")
listings = fread("listings.csv")
head(listings)
hist(listings$id)
hist(metrics$id)
View(listings)
metrics_final = merge(metrics,listings[,c(1,37)])
View(metrics_final)
setwd("C:/Users/marip/Desktop/DataViz/Project")
metrics_final = subset(metrics, metrics_final$neighbourhood_cleansed %in% c("West Town","Uptown",
"Near West Side","Near North Side",
"Loop","Logan Square","Lake View",
"Lincoln Park","Edgewater"))
View(metrics_final)
metrics_final = subset(metrics_final, metrics_final$neighbourhood_cleansed %in% c("West Town","Uptown",
"Near West Side","Near North Side",
"Loop","Logan Square","Lake View",
"Lincoln Park","Edgewater"))
metrics_final = merge(metrics,listings[,c(1,37)])
metrics_final = subset(metrics_final, metrics_final$neighbourhood_cleansed %in% c("West Town","Uptown",
"Near West Side","Near North Side",
"Loop","Logan Square","Lake View",
"Lincoln Park","Edgewater"))
table(metrics_final$neighbourhood_cleansed)
fwrite(metrics_final,"metrics_final.csv")
View(metrics)
metrics_final = merge(metrics,listings[,c(1,37,58)])
metrics_final = subset(metrics_final, metrics_final$neighbourhood_cleansed %in% c("West Town","Uptown",
"Near West Side","Near North Side",
"Loop","Logan Square","Lake View",
"Lincoln Park","Edgewater"))
fwrite(metrics_final,"metrics_final.csv")
View(metrics_final)
getwd()
setwd("C:/Users/marip/Desktop/DataViz/DataViz/TextAnalysis/Data")
fwrite(metrics_final,"metrics_final.csv")
metrics_final = merge(metrics,listings[,c(1,37,58,77,92)])
metrics_final = subset(metrics_final, metrics_final$neighbourhood_cleansed %in% c("West Town","Uptown",
"Near West Side","Near North Side",
"Loop","Logan Square","Lake View",
"Lincoln Park","Edgewater"))
fwrite(metrics_final,"metrics_final.csv")
metrics_final = metrics_final[,c(1,2,3,5,22,23,25,29,31,32,33,35,39,40,42,46,47,48,49)]
fwrite(metrics_final,"metrics_final.csv")
metrics_final = metrics_final[complete.cases(metrics_final)]
fwrite(metrics_final,"metrics_final.csv")
table(metrics_final$neighbourhood_cleansed)
fwrite(metrics_final,"metrics_final.csv")
metrics_final$name_tf_idf_sum = (metrics_final$name_tf_idf_sum - min(metrics_final$name_tf_idf_sum))/
(max(metrics_final$name_tf_idf_sum)-min(metrics_final$name_tf_idf_sum))
metrics_final$summary_tf_idf_sum = (metrics_final$summary_tf_idf_sum - min(metrics_final$summary_tf_idf_sum))/
(max(metrics_final$summary_tf_idf_sum)-min(metrics_final$summary_tf_idf_sum))
metrics_final$description_tf_idf_sum = (metrics_final$description_tf_idf_sum - min(metrics_final$description_tf_idf_sum))/
(max(metrics_final$decription_tf_idf_sum)-min(metrics_final$description_tf_idf_sum))
metrics_final$description_tf_idf_sum = (metrics_final$description_tf_idf_sum - min(metrics_final$description_tf_idf_sum))/
(max(metrics_final$description_tf_idf_sum)-min(metrics_final$description_tf_idf_sum))
metrics_final = merge(metrics,listings[,c(1,37,58,77,92)])
metrics_final = subset(metrics_final, metrics_final$neighbourhood_cleansed %in% c("West Town","Uptown",
"Near West Side","Near North Side",
"Loop","Logan Square","Lake View",
"Lincoln Park","Edgewater"))
metrics_final = metrics_final[,c(1,2,3,5,22,23,25,29,31,32,33,35,39,40,42,46,47,48,49)]
metrics_final = metrics_final[complete.cases(metrics_final)]
metrics_final$name_tf_idf_sum = (metrics_final$name_tf_idf_sum - min(metrics_final$name_tf_idf_sum))/
(max(metrics_final$name_tf_idf_sum)-min(metrics_final$name_tf_idf_sum))
metrics_final$summary_tf_idf_sum = (metrics_final$summary_tf_idf_sum - min(metrics_final$summary_tf_idf_sum))/
(max(metrics_final$summary_tf_idf_sum)-min(metrics_final$summary_tf_idf_sum))
metrics_final$description_tf_idf_sum = (metrics_final$description_tf_idf_sum - min(metrics_final$description_tf_idf_sum))/
(max(metrics_final$description_tf_idf_sum)-min(metrics_final$description_tf_idf_sum))
metrics_final$summary_ARI = (metrics_final$summary_ARI - min(metrics_final$summary_ARI))/
(max(metrics_final$summary_ARI)-min(metrics_final$summary_ARI))
metrics_final$description_ARI = (metrics_final$description_ARI - min(metrics_final$description_ARI))/
(max(metrics_final$description_ARI)-min(metrics_final$description_ARI))
fwrite(metrics_final,"metrics_final.csv")
colstoavg = names(metrics_final)
metrics_aggregated = metrics_final[,lapply(.SD,mean,na.rm=TRUE),by=neighborhood_cleansed,.SDcols=colstoavg]
metrics_aggregated = metrics_final[,lapply(.SD,mean,na.rm=TRUE),by=neighbourhood_cleansed,.SDcols=colstoavg]
str(metrics_final)
metrics_final$price = as.numeric(metrics_final$price)
metrics_final = merge(metrics,listings[,c(1,37,58,77,92)])
metrics_final = subset(metrics_final, metrics_final$neighbourhood_cleansed %in% c("West Town","Uptown",
"Near West Side","Near North Side",
"Loop","Logan Square","Lake View",
"Lincoln Park","Edgewater"))
metrics_final = metrics_final[,c(1,2,3,5,22,23,25,29,31,32,33,35,39,40,42,46,47,48,49)]
metrics_final = metrics_final[complete.cases(metrics_final)]
metrics_final$name_tf_idf_sum = (metrics_final$name_tf_idf_sum - min(metrics_final$name_tf_idf_sum))/
(max(metrics_final$name_tf_idf_sum)-min(metrics_final$name_tf_idf_sum))
metrics_final$summary_tf_idf_sum = (metrics_final$summary_tf_idf_sum - min(metrics_final$summary_tf_idf_sum))/
(max(metrics_final$summary_tf_idf_sum)-min(metrics_final$summary_tf_idf_sum))
metrics_final$description_tf_idf_sum = (metrics_final$description_tf_idf_sum - min(metrics_final$description_tf_idf_sum))/
(max(metrics_final$description_tf_idf_sum)-min(metrics_final$description_tf_idf_sum))
metrics_final$summary_ARI = (metrics_final$summary_ARI - min(metrics_final$summary_ARI))/
(max(metrics_final$summary_ARI)-min(metrics_final$summary_ARI))
metrics_final$description_ARI = (metrics_final$description_ARI - min(metrics_final$description_ARI))/
(max(metrics_final$description_ARI)-min(metrics_final$description_ARI))
metrics_final$price = gsub('\\$', '', metrics_final$price)
metrics_final$price = as.numeric(metrics_final$price)
metrics_final$price
summary(metrics_final$price)
colstoavg = names(metrics_final)
metrics_aggregated = metrics_final[,lapply(.SD,mean,na.rm=TRUE),by=neighbourhood_cleansed,.SDcols=colstoavg]
str(metrics_final)
colstoavg = names(metrics_final[,-c(1,16)])
metrics_aggregated = metrics_final[,lapply(.SD,mean,na.rm=TRUE),by=neighbourhood_cleansed,.SDcols=colstoavg]
head(metrics_aggregated)
fwrite(metrics_aggregated,"metrics_aggregated.csv")
rm(list=ls())
setwd("C:/Users/marip/Desktop/mobile/Model_Features/FinalRegression")
library(data.table)
library(caret)
heuristic = fread("premium_regression.csv")
combined8.14 = fread("combined_prediction_heuristic8.14.csv")
combined8 = fread("combined_prediction_heuristic8.csv")
heuristic = heuristic[, eigenCentrality := NULL]
heuristic = heuristic[, closeness := NULL]
combined8 = combined8[, eigenCentrality := NULL]
combined8 = combined8[, closeness := NULL]
heuristic$tot_spent = log(heuristic$tot_spent +1)
combined8$tot_spent = log(combined8$tot_spent +1)
cntrl <- trainControl(method = "cv", number = 10)
base.grid <- expand.grid(.eta = c(0.1, 0.5), .max_depth = c(3,6),
.subsample = c(0.5, 1), .nrounds = 500,
.gamma = 0, .colsample_bytree = 0.5,
.min_child_weight = 1)
heuristic.regression.xgb = train(tot_spent ~ .,
data = heuristic[,-1],
method = "xgbTree",
trControl = cntrl,
tuneGrid = base.grid)
mape <- function(y, yhat)
mape <- function(y, yhat){
mean(abs((y - yhat)/y))}
mape <- function(y, yhat){
mean(abs((y - yhat)/y))}
mape <- function(yobs,ypred){
100 * mean(abs((yobs -ypred)/yobs))}
mapeSummary <- function (data,
lev = NULL,
model = NULL) {
out <- mape(data$obs, data$pred)
names(out) <- "MAPE"
out
}
mControl <- trainControl(summaryFunction = mapeSummary)
cntrl <- trainControl(method = "cv", number = 10)
mControl <- trainControl(summaryFunction = mapeSummary)
base.grid <- expand.grid(.eta = c(0.1, 0.5), .max_depth = c(3,6),
.subsample = c(0.5, 1), .nrounds = 500,
.gamma = 0, .colsample_bytree = 0.5,
.min_child_weight = 1)
heuristic.regression.xgb = train(tot_spent ~ .,
data = heuristic[,-1],
method = "xgbTree",
trControl = mcntrl,
tuneGrid = base.grid)
heuristic.regression.xgb = train(tot_spent ~ .,
data = heuristic[,-1],
method = "xgbTree",
trControl = mControl,
tuneGrid = base.grid)
mControl <- trainControl(method = "cv", number = 10, summaryFunction = mapeSummary)
heuristic.regression.xgb = train(tot_spent ~ .,
data = heuristic[,-1],
method = "xgbTree",
trControl = mControl,
tuneGrid = base.grid)
heuristic.regression.xgb
heuristic$tot_spent = log(heuristic$tot_spent +1.0001)
combined8$tot_spent = log(combined8$tot_spent +1.0001)
heuristic.regression.xgb = train(tot_spent ~ .,
data = heuristic[,-1],
method = "xgbTree",
trControl = mControl,
tuneGrid = base.grid)
heuristic.regression.xgb
heuristic$tot_spent = log(heuristic$tot_spent +1)
combined8$tot_spent = log(combined8$tot_spent +1)
combined8.14$tot_spent = log(combined8.14$tot_spent+1)
heuristic$tot_spent = log(heuristic$tot_spent +1)
combined8$tot_spent = log(combined8$tot_spent +1)
combined8.14$tot_spent = log(combined8.14$tot_spent+1)
heuristic = fread("premium_regression.csv")
combined8.14 = fread("combined_prediction_heuristic8.14.csv")
combined8 = fread("combined_prediction_heuristic8.csv")
heuristic = heuristic[, eigenCentrality := NULL]
heuristic = heuristic[, closeness := NULL]
combined8 = combined8[, eigenCentrality := NULL]
combined8.14 = combined8.14[, eigenCentrality := NULL]
combined8 = combined8[, closeness := NULL]
combined8.14 = combined8.14[, closeness :=  NULL]
heuristic$tot_spent = log(heuristic$tot_spent +1)
combined8$tot_spent = log(combined8$tot_spent +1)
combined8.14$tot_spent = log(combined8.14$tot_spent+1)
mape <- function(yobs,ypred){
if (yobs==0) {
if (ypred==0) {0}
else {100}
}
else {100 * mean(abs((yobs -ypred)/yobs))}
}
mapeSummary <- function (data,
lev = NULL,
model = NULL) {
out <- mape(data$obs, data$pred)
names(out) <- "MAPE"
out
}
mControl <- trainControl(method = "cv", number = 10, summaryFunction = mapeSummary)
base.grid <- expand.grid(.eta = c(0.1, 0.5), .max_depth = c(3,6),
.subsample = c(0.5, 1), .nrounds = 500,
.gamma = 0, .colsample_bytree = 0.5,
.min_child_weight = 1)
heuristic.regression.xgb = train(tot_spent ~ .,
data = heuristic[,-1],
method = "xgbTree",
trControl = mControl,
tuneGrid = base.grid)
heuristic.regression.xgb
heuristic = fread("premium_regression.csv")
combined8.14 = fread("combined_prediction_heuristic8.14.csv")
combined8 = fread("combined_prediction_heuristic8.csv")
heuristic = heuristic[, eigenCentrality := NULL]
heuristic = heuristic[, closeness := NULL]
combined8 = combined8[, eigenCentrality := NULL]
combined8.14 = combined8.14[, eigenCentrality := NULL]
combined8 = combined8[, closeness := NULL]
combined8.14 = combined8.14[, closeness :=  NULL]
heuristic$tot_spent = log(heuristic$tot_spent +1)
combined8$tot_spent = log(combined8$tot_spent +1)
combined8.14$tot_spent = log(combined8.14$tot_spent+1)
mape <- function(yobs,ypred){
yobs.is.zero <- yobs==0
ypred.is.zero <- ypred==0
temp <- abs((yobs - ypred)/yobs)
temp[yobs.is.zero & ypred.is.zero] <- 0
temp[yobs.is.zero & !ypred.is.zero] <- 100
100 * mean(temp)
}
mapeSummary <- function (data,
lev = NULL,
model = NULL) {
out <- mape(data$obs, data$pred)
names(out) <- "MAPE"
out
}
mControl <- trainControl(method = "cv", number = 10, summaryFunction = mapeSummary)
mape <- function(yobs,ypred){
yobs.is.zero <- yobs==0
ypred.is.zero <- ypred==0
temp <- abs((yobs - ypred)/yobs)
temp[yobs.is.zero & ypred.is.zero] <- 0
temp[yobs.is.zero & !ypred.is.zero] <- 1
100 * mean(temp)
}
mapeSummary <- function (data,
lev = NULL,
model = NULL) {
out <- mape(data$obs, data$pred)
names(out) <- "MAPE"
out
}
mControl <- trainControl(method = "cv", number = 10, summaryFunction = mapeSummary)
base.grid <- expand.grid(.mtry=3:8)
comb.regression.rf.8 = train(tot_spent ~ .,
data = combined8[,-c(1)],
method = "rf",
trControl = cntrl,
tuneGrid = base.grid)
comb.regression.rf.8
comb.regression.rf.8 = train(tot_spent ~ .,
data = combined8[,-c(1)],
method = "rf",
trControl = mControl,
tuneGrid = base.grid)
comb.regression.rf.8
maeSummary <- function (data,
lev = NULL,
model = NULL) {
out <- mae(data$obs, data$pred)
names(out) <- "MAE"
out
}
mControl <- trainControl(method = "cv", number = 10, summaryFunction = maeSummary)
comb.regression.rf.8 = train(tot_spent ~ .,
data = combined8[,-c(1)],
method = "rf",
trControl = mControl,
tuneGrid = base.grid)
comb.regression.rf.8 = train(tot_spent ~ .,
data = combined8[,-c(1)],
method = "rf",
trControl = mControl,
tuneGrid = base.grid)
maeSummary <- function (data,
lev = NULL,
model = NULL) {
out <- mae(data$obs, data$pred)
names(out) <- "MAE"
out
}
mControl <- trainControl(method = "cv", number = 10, summaryFunction = maeSummary)
comb.regression.rf.8 = train(tot_spent ~ .,
data = combined8[,-c(1)],
method = "rf",
trControl = mControl,
tuneGrid = base.grid)
mae <- function(yobs,ypred){
mean(abs(yobs - ypred))
}
maeSummary <- function (data,
lev = NULL,
model = NULL) {
out <- mae(data$obs, data$pred)
names(out) <- "MAE"
out
}
comb.regression.rf.8 = train(tot_spent ~ .,
data = combined8[,-c(1)],
method = "rf",
trControl = mControl,
tuneGrid = base.grid)
comb.regression.rf.8
setwd("C:/Users/marip/Desktop/DataViz/DataViz/TextAnalysis/Data")
setwd("C:/Users/marip/Desktop/DataViz/Project")
library(data.tabl)
library(data.table)
radar = fread("Final_radar.csv")
head(radar)
colstoavg = names(radar[,-c(1,17)])
radar_aggregated = radar[,lapply(.SD,mean,na.rm=TRUE),by=neighbourhood_cleansed,.SDcols=colstoavg]
View(radar_aggregated)
radar_aggregated = subset(radar_aggregated, radar_aggregated$neighbourhood_cleansed %in% c("West Town","Uptown",
"Near West Side","Near North Side",
"Loop","Logan Square","Lake View",
"Lincoln Park","Edgewater"))
View(radar_aggregated)
test = data.table(apply(radar_aggregated[,-1],1,function(x){(x-min(x))/(max(x)-min(x))}))
View(test)
test = data.table(apply(radar_aggregated[,-1],2,function(x){(x-min(x))/(max(x)-min(x))}))
View(test)
test = cbind(radar_aggregated$neighbourhood_cleansed, test)
View(test)
View(test)
colnames(test)[1] <- "Nighborhood"
View(test)
colnames(test)[1] <- "Neighborhood"
setwd("C:/Users/marip/Desktop/DataViz/DataViz/TextAnalysis/Data")
test
fwrite(test, "radar_aggregated.csv")
View(radar_aggregated)
setwd("C:/Users/marip/Desktop/DataViz/DataViz/TextAnalysis/Data")
fwrite(test, "radar_aggregated.csv")
fread("metrics_aggregated.csv")
metrics = fread("metrics_aggregated.csv")
metrics = metrics[,c(1,16,17,18)]
radar_aggregated = merge(radar_aggregated, metrics)
View(radar_aggregated)
radar_aggregated = merge(test, metrics)
test
metrics
radar_aggregated
test = data.table(apply(radar_aggregated[,-1],2,function(x){(x-min(x))/(max(x)-min(x))}))
test = cbind(radar_aggregated$neighbourhood_cleansed, test)
colnames(test)[1] <- "Neighborhood"
View(test)
fwrite(test, "radar_aggregated.csv")
setwd("C:/Users/marip/Desktop/DataViz/DataViz/TextAnalysis/Data")
fwrite(test, "radar_aggregated.csv")
View(radar_aggregated)
View(test)
fwrite(test, "radar_aggregated.csv")
